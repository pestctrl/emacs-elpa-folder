;;; pulseaudio-control-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (file-name-directory load-file-name)) (car load-path)))



;;; Generated autoloads from pulseaudio-control.el

(defvar pulseaudio-control-display-mode nil "\
Non-nil if Pulseaudio-Control-Display mode is enabled.
See the `pulseaudio-control-display-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `pulseaudio-control-display-mode'.")
(custom-autoload 'pulseaudio-control-display-mode "pulseaudio-control" nil)
(autoload 'pulseaudio-control-display-mode "pulseaudio-control" "\
Show the current sink and source information in the mode line.

This is a global minor mode.  If called interactively, toggle the
`Pulseaudio-Control-Display mode' mode.  If the prefix argument
is positive, enable the mode, and if it is zero or negative,
disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value \\='pulseaudio-control-display-mode)'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(autoload 'pulseaudio-control-default-keybindings "pulseaudio-control" "\
Make `C-x /' the prefix for accessing pulseaudio-control bindings." t)
(autoload 'pulseaudio-control-display-volume "pulseaudio-control" "\
Display volume of currently-selected Pulse sink." t)
(autoload 'pulseaudio-control-increase-sink-volume "pulseaudio-control" "\
Increase the volume of the current Pulse sink by VOL.

(fn VOL)" t)
(autoload 'pulseaudio-control-increase-source-volume "pulseaudio-control" "\
Increase the volume of the current Pulse source by VOL.

(fn VOL)" t)
(autoload 'pulseaudio-control-decrease-sink-volume "pulseaudio-control" "\
Decrease the volume of the current Pulse sink by VOL.

(fn VOL)" t)
(autoload 'pulseaudio-control-decrease-source-volume "pulseaudio-control" "\
Decrease the volume of the current Pulse sink by VOL.

(fn VOL)" t)
(autoload 'pulseaudio-control-select-sink-by-index "pulseaudio-control" "\
Select which Pulse SINK to act on, by numeric index.

(fn SINK)" t)
(autoload 'pulseaudio-control-select-source-by-index "pulseaudio-control" "\
Select which Pulse SOURCE to act on, by numeric index.

(fn SOURCE)" t)
(autoload 'pulseaudio-control-select-sink-by-name "pulseaudio-control" "\
Select which Pulse sink to act on, by name." t)
(autoload 'pulseaudio-control-select-source-by-name "pulseaudio-control" "\
Select which Pulse source to act on, by name." t)
(autoload 'pulseaudio-control-set-sink-volume "pulseaudio-control" "\
Set volume of currently-selected Pulse sink.

The value can be:

* a percentage, e.g. '10%';
* in decibels, e.g. '2dB';
* a linear factor, e.g. '0.9' or '1.1'.

Argument VOLUME is the volume provided by the user.

(fn VOLUME)" t)
(autoload 'pulseaudio-control-set-source-volume "pulseaudio-control" "\
Set volume of currently-selected Pulse source.

The value can be:

* a percentage, e.g. '10%';
* in decibels, e.g. '2dB';
* a linear factor, e.g. '0.9' or '1.1'.

Argument VOLUME is the volume provided by the user.

(fn VOLUME)" t)
(autoload 'pulseaudio-control-toggle-current-sink-mute "pulseaudio-control" "\
Toggle muting of currently-selected Pulse sink." t)
(autoload 'pulseaudio-control-toggle-current-source-mute "pulseaudio-control" "\
Toggle muting of currently-selected Pulse source." t)
(autoload 'pulseaudio-control-toggle-sink-mute-by-index "pulseaudio-control" "\
Toggle muting of Pulse sink, specified by index." t)
(autoload 'pulseaudio-control-toggle-source-mute-by-index "pulseaudio-control" "\
Toggle muting of Pulse source, specified by index." t)
(autoload 'pulseaudio-control-toggle-sink-mute-by-name "pulseaudio-control" "\
Toggle muting of Pulse sink, specified by name." t)
(autoload 'pulseaudio-control-toggle-source-mute-by-name "pulseaudio-control" "\
Toggle muting of Pulse source, specified by name." t)
(defvar pulseaudio-control-default-sink-mode nil "\
Non-nil if Pulseaudio-Control-Default-Sink mode is enabled.
See the `pulseaudio-control-default-sink-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `pulseaudio-control-default-sink-mode'.")
(custom-autoload 'pulseaudio-control-default-sink-mode "pulseaudio-control" nil)
(autoload 'pulseaudio-control-default-sink-mode "pulseaudio-control" "\
Set the use of @DEFAULT_SINK@ for volume operations.

This is a global minor mode.  If called interactively, toggle the
`Pulseaudio-Control-Default-Sink mode' mode.  If the prefix
argument is positive, enable the mode, and if it is zero or
negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value
\\='pulseaudio-control-default-sink-mode)'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(defvar pulseaudio-control-default-source-mode nil "\
Non-nil if Pulseaudio-Control-Default-Source mode is enabled.
See the `pulseaudio-control-default-source-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `pulseaudio-control-default-source-mode'.")
(custom-autoload 'pulseaudio-control-default-source-mode "pulseaudio-control" nil)
(autoload 'pulseaudio-control-default-source-mode "pulseaudio-control" "\
Set the use of @DEFAULT_SOURCE@ for volume operations.

This is a global minor mode.  If called interactively, toggle the
`Pulseaudio-Control-Default-Source mode' mode.  If the prefix
argument is positive, enable the mode, and if it is zero or
negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value
\\='pulseaudio-control-default-source-mode)'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "pulseaudio-control" '("pulseaudio-control-"))

;;; End of scraped data

(provide 'pulseaudio-control-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; pulseaudio-control-autoloads.el ends here
