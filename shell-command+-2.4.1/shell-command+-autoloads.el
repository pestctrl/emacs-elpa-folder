;;; shell-command+-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (directory-file-name
                         (or (file-name-directory #$) (car load-path))))



;;; Generated autoloads from shell-command+.el

(defvar shell-command+-features (list #'shell-command+-expand-% #'shell-command+-command-substitution #'shell-command+-redirect-output #'shell-command+-implicit-cd) "\
List of features to use by `shell-command+'.
Each element of the list is a symbol designating a function to
call in order.  Each is passed the parsed shell command (see
`shell-command+-parse'), and two functions implementing the
\"main functionality\" and a context.  The former is invoked with
three arguments, the final command string, and two points
designating the beginning and ending of the implicit region.  The
context function is invoked with the previous function passed as
a function object and the same argument as the function,
totalling to four arguments.")
(custom-autoload 'shell-command+-features "shell-command+" t)
(autoload 'shell-command+--make-docstring "shell-command+" "\
Return a docstring for `shell-command+'.")
(put #'shell-command+ 'function-documentation '(shell-command+--make-docstring))
(autoload 'shell-command+ "shell-command+" "\
An extended alternative to `shell-command'.

COMMAND may be parsed and modified based on the comments of
`shell-command+-features'.  If the command modifies the current
buffer contents, it will do so between BEG and END.  If BEG or
END are not passed, the beginning or end of the buffer will
respectively be assumed as a fallback.

The current configuration adds the following functionality, that
can be combined but will be processed in the following order:

(fn COMMAND &optional BEG END)" t)
(register-definition-prefixes "shell-command+" '("shell-command+-"))

;;; End of scraped data

(provide 'shell-command+-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; shell-command+-autoloads.el ends here
